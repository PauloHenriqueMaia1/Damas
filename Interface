import pygame
import sys

# Inicialização do Pygame
pygame.init()

# Definição de constantes
WIDTH, HEIGHT = 400, 400
ROWS, COLS = 8, 8
SQUARE_SIZE = WIDTH // COLS

# Cores
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)

# Dicionário customizado
custom_board = {
    "8a": '-', "8b": 'P', "8c": '-', "8d": 'P', "8e": '-', "8f": 'P', "8g": '-', "8h": 'P',
    "7a": 'P', "7b": '-', "7c": 'P', "7d": '-', "7e": 'P', "7f": '-', "7g": 'P', "7h": '-',
    "6a": '-', "6b": 'P', "6c": '-', "6d": 'P', "6e": '-', "6f": 'P', "6g": '-', "6h": 'P',
    "5a": '-', "5b": '-', "5c": '-', "5d": '-', "5e": '-', "5f": '-', "5g": '-', "5h": '-',
    "4a": '-', "4b": '-', "4c": '-', "4d": '-', "4e": '-', "4f": '-', "4g": '-', "4h": '-',
    "3a": 'B', "3b": '-', "3c": 'B', "3d": '-', "3e": 'B', "3f": '-', "3g": 'B', "3h": '-',
    "2a": '-', "2b": 'B', "2c": '-', "2d": 'B', "2e": '-', "2f": 'B', "2g": '-', "2h": 'B',
    "1a": 'B', "1b": '-', "1c": 'B', "1d": '-', "1e": 'B', "1f": '-', "1g": 'B', "1h": '-'
}

# Variáveis para controle de movimento
selected_piece = None
target_square = None
move_in_progress = False

# Função para desenhar o tabuleiro
def draw_board(screen):
    for row in range(ROWS):
        for col in range(COLS):
            color = WHITE if (row + col) % 2 == 0 else BLACK
            pygame.draw.rect(screen, color, (col * SQUARE_SIZE, row * SQUARE_SIZE, SQUARE_SIZE, SQUARE_SIZE))

            square_key = f"{row + 1}{chr(ord('a') + col)}"
            piece = custom_board[square_key]

            if piece == 'P':
                pygame.draw.circle(screen, RED, (col * SQUARE_SIZE + SQUARE_SIZE // 2, row * SQUARE_SIZE + SQUARE_SIZE // 2), SQUARE_SIZE // 2 - 5)
            elif piece == 'B':
                pygame.draw.circle(screen, RED, (col * SQUARE_SIZE + SQUARE_SIZE // 2, row * SQUARE_SIZE + SQUARE_SIZE // 2), SQUARE_SIZE // 2 - 5)
                pygame.draw.circle(screen, BLACK, (col * SQUARE_SIZE + SQUARE_SIZE // 2, row * SQUARE_SIZE + SQUARE_SIZE // 2), SQUARE_SIZE // 2 - 10)

# Função principal do jogo
def main():
    global selected_piece, target_square, move_in_progress

    screen = pygame.display.set_mode((WIDTH, HEIGHT))
    pygame.display.set_caption("Jogo de Damas")

    clock = pygame.time.Clock()

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()

            if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:
                # Verifica se o clique foi dentro do tabuleiro
                mouse_x, mouse_y = pygame.mouse.get_pos()
                col = mouse_x // SQUARE_SIZE
                row = mouse_y // SQUARE_SIZE

                square_key = f"{row + 1}{chr(ord('a') + col)}"
                piece = custom_board[square_key]

                if piece != '-' and not move_in_progress:
                    selected_piece = square_key
                    move_in_progress = True
                elif move_in_progress and square_key != selected_piece:
                    target_square = square_key

        if move_in_progress and selected_piece and target_square:
            custom_board[target_square] = custom_board[selected_piece]
            custom_board[selected_piece] = '-'

            selected_piece = None
            target_square = None
            move_in_progress = False

        screen.fill(BLACK)
        draw_board(screen)
        pygame.display.flip()

        clock.tick(60)

if __name__ == "__main__":
    main()
